class BinaryTree {
    Node root;
    Node head;

    Node binaryTreeToDLL(Node node) {
        if (node == null) {
            return null;
        }

        if (node.left != null) {
            Node left = binaryTreeToDLL(node.left);
            while (left.right != null) {
                left = left.right;
            }
            left.right = node;
            node.left = left;
        }

        if (node.right != null) {
            Node right = binaryTreeToDLL(node.right);
            while (right.left != null) {
                right = right.left;
            }
            right.left = node;
            node.right = right;
        }

        return node;
    }

    void convertToDLL() {
        if (root == null) {
            return;
        }
        root = binaryTreeToDLL(root);
        while (root.left != null) {
            root = root.left;
        }
        head = root;
    }

    void printList(Node head) {
        System.out.println("Doubly linked list:");
        while (head != null) {
            System.out.print(head.value + " ");
            head = head.right;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        BinaryTree tree = new BinaryTree();
        tree.root = new Node(10);
        tree.root.left = new Node(12);
        tree.root.right = new Node(15);
        tree.root.left.left = new Node(25);
        tree.root.left.right = new Node(30);
        tree.root.right.left = new Node(36);

        tree.convertToDLL();
        tree.printList(tree.head);
    }
}
