import java.util.Stack;

class BinaryTree {
    Node root;

    void spiralTraversal() {
        if (root == null) {
            return;
        }

        Stack<Node> s1 = new Stack<>(); // Stack for levels to be printed from left to right
        Stack<Node> s2 = new Stack<>(); // Stack for levels to be printed from right to left

        s1.push(root);

        while (!s1.isEmpty() || !s2.isEmpty()) {
            while (!s1.isEmpty()) {
                Node temp = s1.pop();
                System.out.print(temp.value + " ");

                if (temp.left != null) {
                    s2.push(temp.left);
                }

                if (temp.right != null) {
                    s2.push(temp.right);
                }
            }

            while (!s2.isEmpty()) {
                Node temp = s2.pop();
                System.out.print(temp.value + " ");

                if (temp.right != null) {
                    s1.push(temp.right);
                }

                if (temp.left != null) {
                    s1.push(temp.left);
                }
            }
        }
    }

    public static void main(String[] args) {
        BinaryTree tree = new BinaryTree();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        tree.root.right.left = new Node(6);
        tree.root.right.right = new Node(7);

        System.out.println("Spiral (Zigzag) traversal of binary tree is ");
        tree.spiralTraversal();
    }
}
